apply plugin: 'com.android.application'

// Add a new entry to local.properties:
// prebuilt_external_libs.dir=/Users/ewing/Source/Blurrr/Release/BlurrrSDKApple/Libraries/SDK/Android/Lua_f32_i32
// This should contain a lua directory with a layout like the old Android NDK "module" system, which contains include/ and libs/<arch>/lib*.so
// This path will be passed to CMake as -DPREBUILT_LIBRARY_PATH because the Android cross-compile chain disables the FIND_ system with CMAKE_PREFIX_PATH and friends.
// This custom flag works in conjunction with our InitialCacheAndroid.cmake file which effectively restores the FIND_ behavior.
Properties local_properties = new Properties()
local_properties.load(project.rootProject.file('local.properties').newDataInputStream())
def prebuilt_library_path = local_properties.getProperty('prebuilt_external_libs.dir')

android {
	compileSdkVersion 26
	buildToolsVersion "27.0.3"

	defaultConfig {
		applicationId "br.pucrio.tecgraf.iuptestappwebbrowser"
		minSdkVersion 14
		targetSdkVersion 26
		versionCode 1
		versionName "1.0"

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
		externalNativeBuild {
			cmake {
				arguments "-DIUP_ANDROID_BUILD_IUPWEB=1", 
						"-DIUPLUA_ANDROID_BUILD_TEST_LIBRARY=1",
//						"-DPREBUILT_LIBRARY_PATH=/Users/ewing/Source/Blurrr/Release/BlurrrSDKApple/Libraries/SDK/Android/Lua_f32_i32",
						"-DPREBUILT_LIBRARY_PATH=" + prebuilt_library_path,
						"-C../../CMakeModules/InitialCacheAndroid.cmake"
				cFlags ""
				cppFlags ""
			}
		}

		ndk {
			// Specifies the ABI configurations of your native
			// libraries Gradle should build and package with your APK.
//			abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
//			abiFilters 'arm64-v8a', 'x86_64'
//			abiFilters 'armeabi-v7a', 'x86'
			abiFilters 'armeabi-v7a'
//			abiFilters 'x86'
//			abiFilters 'arm64-v8a'
		}
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	externalNativeBuild {
		cmake {
			path "../../CMakeLists.txt"
		}
	}
}

dependencies {

	compile project(':iup')
	compile project(':iupweb')
//	compile project(':iuplua')

	compile fileTree(dir: 'libs', include: ['*.jar'])
	androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	testCompile 'junit:junit:4.12'
}
// needed to find local .aar's
repositories {
	flatDir{
		dirs 'libs'
	}
}
